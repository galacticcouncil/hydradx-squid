name: HydraDX Subsquid Deployment

on:
  push:
    branches: [ main ]

env:
  CGP_PROJECT_ID: rich-principle-383410
  CGP_SERVICE_NAME: squid-sa
  GCP_INSTANCE: rich-principle-383410:europe-west3:squid

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate with GCP
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.CGP_PROJECT_PASS }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
    
    - name: Build Processor image
      run: docker buildx build . --target processor -t gcr.io/${{ env.CGP_PROJECT_ID }}/${{ env.CGP_SERVICE_NAME }}:processor-latest --platform linux/amd64
    
    - name: Build Query-node image
      run: docker buildx build . --target query-node -t gcr.io/${{ env.CGP_PROJECT_ID }}/${{ env.CGP_SERVICE_NAME }}:query-node-latest --platform linux/amd64
    
    - name: Debug - List images
      run: docker images

    - name: Docker credential helper
      run: gcloud auth configure-docker -q
    
    - name: IAM policy helper
      run: gcloud run services add-iam-policy-binding --region=europe-west3 --member=allUsers --role=roles/run.invoker ${{ env.CGP_SERVICE_NAME }}-processor

    - name: Push & Deploy Processor image
      run: |
        docker push gcr.io/${{ env.CGP_PROJECT_ID }}/${{ env.CGP_SERVICE_NAME }}:processor-latest
        gcloud run deploy ${CGP_SERVICE_NAME}-processor \
          --image gcr.io/${CGP_PROJECT_ID}/${CGP_SERVICE_NAME}:processor-latest \
          --platform managed \
          --region europe-west3 \
          --allow-unauthenticated \
          --memory 4000Mi \
          --add-cloudsql-instances ${GCP_INSTANCE} \
          --set-env-vars INSTANCE_UNIX_SOCKET="/cloudsql/${GCP_INSTANCE}" \
          --set-env-vars HOST="/cloudsql/${GCP_INSTANCE}" \
          --set-env-vars INSTANCE_CONNECTION_NAME=${GCP_INSTANCE} \
          --set-env-vars DB_NAME="squid" \
          --set-env-vars DB_USER="squid" \
          --set-env-vars DB_PASS="squid"

    - name: Push & Deploy Query-node image
      run: |
        docker push gcr.io/${{ env.CGP_PROJECT_ID }}/${{ env.CGP_SERVICE_NAME }}:query-node-latest
        gcloud run deploy ${CGP_SERVICE_NAME}-query-node \
          --image gcr.io/${CGP_PROJECT_ID}/${CGP_SERVICE_NAME}:query-node-latest \
          --platform managed \
          --region europe-west3 \
          --allow-unauthenticated \
          --memory 4000Mi
